plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id("dagger.hilt.android.plugin")
    id "com.google.protobuf" version "0.8.17"
}
apply plugin: 'kotlin-android'

android {
    compileSdk 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.applux"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kapt{
        correctErrorTypes = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        dataBinding true
        viewBinding true
    }
    dataBinding{
        enabled true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation('androidx.fragment:fragment-ktx:1.5.3')
    implementation("androidx.activity:activity-ktx:1.6.0")

    implementation('androidx.navigation:navigation-fragment-ktx:2.6.0-alpha02')
    implementation('androidx.navigation:navigation-ui-ktx:2.6.0-alpha02')
    implementation('androidx.navigation:navigation-dynamic-features-fragment:2.6.0-alpha02')

    implementation('androidx.lifecycle:lifecycle-livedata-ktx:2.5.1')
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.5.1")
    implementation("androidx.lifecycle:lifecycle-service:2.5.1")


    implementation platform('com.google.firebase:firebase-bom:28.3.0')
    implementation 'com.google.firebase:firebase-analytics-ktx:21.1.1'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.6'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.3.0'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.firebaseui:firebase-ui-storage:8.0.0'
    implementation 'com.google.firebase:firebase-perf-ktx'

    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    implementation 'com.google.android.gms:play-services-safetynet:18.0.0'
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0-beta04'

    implementation 'io.michaelrocks:libphonenumber-android:8.12.36'
    implementation('androidx.paging:paging-runtime:3.1.1')

    // Dagger Hilt
    implementation('com.google.dagger:hilt-android:2.43.1')
    kapt('com.google.dagger:hilt-android-compiler:2.43.1')

    implementation 'com.ramotion.navigationtoolbar:navigation-toolbar:0.1.3'

    implementation 'com.google.android.material:material:1.6.0-alpha01'


    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation("androidx.datastore:datastore-preferences:1.0.0")
    implementation("androidx.datastore:datastore:1.0.0")
    implementation  "androidx.datastore:datastore-core:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"


    //All Test Dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"

    // AndroidX Test - Instrumented testing
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"

    // Core library
    androidTestImplementation("androidx.test:core:1.4.0")

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("androidx.test:rules:1.4.0")

    // Assertions
    androidTestImplementation("androidx.test.ext:junit:1.1.3")
    androidTestImplementation("androidx.test.ext:truth:1.4.0")

    // Espresso dependencies
    androidTestImplementation( "androidx.test.espresso:espresso-core:3.4.0")
    androidTestImplementation( "androidx.test.espresso:espresso-contrib:3.4.0")
    androidTestImplementation( "androidx.test.espresso:espresso-intents:3.4.0")
    androidTestImplementation( "androidx.test.espresso:espresso-accessibility:3.4.0")
    androidTestImplementation( "androidx.test.espresso:espresso-web:3.4.0")
    androidTestImplementation( "androidx.test.espresso.idling:idling-concurrent:3.4.0")
    androidTestImplementation( "androidx.test.espresso:espresso-idling-resource:3.4.0")

    testImplementation 'org.robolectric:robolectric:4.7.3'

    androidTestImplementation "org.mockito:mockito-core:3.+"
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'

    testImplementation "com.google.truth:truth:1.1.3"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"

    debugImplementation("androidx.fragment:fragment-testing:1.4.1")
    implementation "androidx.core:core-ktx:+"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}